{"version":3,"sources":["profiledrawing-512px.png","sketches/Sketch.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["sketch","p","Particle","this","x","random","width","y","height","r","xSpeed","ySpeed","noStroke","fill","circle","particles","forEach","element","dist","stroke","line","setup","createCanvas","windowWidth","windowHeight","i","push","clicked","draw","clear","length","createParticle","moveParticle","joinParticles","slice","mouseButton","LEFT","noFill","strokeWeight","ellipse","mouseX","mouseY","mousePressed","event","console","log","setTimeout","windowResized","resizeCanvas","Header","className","href","style","fontWeight","App","Sketch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,I,mCCEA,SAASA,EAAQC,GAAG,IAIzBC,EAJyB,WAO7B,aAAc,oBACZC,KAAKC,EAAIH,EAAEI,OAAO,EAAEJ,EAAEK,OACtBH,KAAKI,EAAIN,EAAEI,OAAO,EAAEJ,EAAEO,QACtBL,KAAKM,EAAIR,EAAEI,OAAO,EAAE,GACpBF,KAAKO,OAAST,EAAEI,QAAQ,EAAE,GAC1BF,KAAKQ,OAASV,EAAEI,QAAQ,EAAE,KAZC,kDAgB7B,WACEJ,EAAEW,WACFX,EAAEY,KAAK,yBACPZ,EAAEa,OAAOX,KAAKC,EAAED,KAAKI,EAAEJ,KAAKM,KAnBD,0BAuB7B,YACKN,KAAKC,EAAI,GAAKD,KAAKC,EAAIH,EAAEK,SAC1BH,KAAKO,SAAS,IACbP,KAAKI,EAAI,GAAKJ,KAAKI,EAAIN,EAAEO,UAC1BL,KAAKQ,SAAS,GAChBR,KAAKC,GAAGD,KAAKO,OACbP,KAAKI,GAAGJ,KAAKQ,SA7Bc,2BAkC3B,SAAcI,GAAY,IAAD,OACrBA,EAAUC,SAAQ,SAAAC,GACRhB,EAAEiB,KAAK,EAAKd,EAAE,EAAKG,EAAEU,EAAQb,EAAEa,EAAQV,GAC1C,KACHN,EAAEkB,OAAO,yBACTlB,EAAEmB,KAAK,EAAKhB,EAAE,EAAKG,EAAEU,EAAQb,EAAEa,EAAQV,WAvCpB,KA6C3BQ,EAAY,GAEhBd,EAAEoB,MAAQ,WACNpB,EAAEqB,aAAarB,EAAEsB,YAAatB,EAAEuB,cAChC,IAAI,IAAIC,EAAI,EAAEA,EAAExB,EAAEK,MAAM,GAAGmB,IACvBV,EAAUW,KAAK,IAAIxB,IAwB3B,IAAIyB,GAAS,EAETlB,EAAI,EAERR,EAAE2B,KAAO,WACL3B,EAAE4B,QAEF,IAAI,IAAIJ,EAAI,EAAEA,EAAEV,EAAUe,OAAOL,IAC7BV,EAAUU,GAAGM,iBACbhB,EAAUU,GAAGO,eACbjB,EAAUU,GAAGQ,cAAclB,EAAUmB,MAAMT,IAM3CE,GAAW1B,EAAEkC,cAAgBlC,EAAEmC,MAC/BnC,EAAEoC,SACFpC,EAAEkB,OAAO,KACTlB,EAAEqC,aAAa,GACfrC,EAAEsC,QAAQtC,EAAEuC,OAAQvC,EAAEwC,OAAQhC,EAAGA,GACjCA,GApBC,GAuBDA,EAAI,GAIZR,EAAEyC,aAAe,SAAUC,GACvBC,QAAQC,IAAIF,GACZhB,GAAU,EACVmB,YAAW,WACPnB,GAAU,IACX,MAGP1B,EAAE8C,cAAgB,WACd9C,EAAE+C,aAAa/C,EAAEsB,YAAatB,EAAEuB,e,iBCzFzByB,EArBA,WACX,OACI,yBAAQC,UAAY,aAApB,UACI,sBAAKA,UAAY,iBAAjB,UACI,mBAAGA,UAAY,kBAAkBC,KAAM,MAAvC,mBAGA,mBAAGD,UAAY,kBAAkBC,KAAM,MAAvC,sBAGA,mBAAGD,UAAY,kBAAkBC,KAAM,MAAvC,wBAIJ,qBAAKD,UAAY,OAAjB,SACI,oBAAIE,MAAQ,CAACC,WAAY,KAAzB,gCCODC,EAjBH,WACV,OACE,sBAAKJ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,cAAf,SAEE,iEAIF,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAgBlD,OAAQuD,UCPjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e61228ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profiledrawing-512px.00b2f1fa.png\";","import './Sketch.css';\r\n\r\nexport default function sketch (p) {\r\n\r\n    // Particle example from https://p5js.org/examples/simulate-particles.html\r\n    // this class describes the properties of a single particle.\r\n    class Particle {\r\n    // setting the co-ordinates, radius and the\r\n    // speed of a particle in both the co-ordinates axes.\r\n      constructor(){\r\n        this.x = p.random(0,p.width);\r\n        this.y = p.random(0,p.height);\r\n        this.r = p.random(1,8);\r\n        this.xSpeed = p.random(-2,2);\r\n        this.ySpeed = p.random(-1,1.5);\r\n      }\r\n    \r\n    // creation of a particle.\r\n      createParticle() {\r\n        p.noStroke();\r\n        p.fill('rgba(200,169,169,0.5)');\r\n        p.circle(this.x,this.y,this.r);\r\n      }\r\n    \r\n    // setting the particle in motion.\r\n      moveParticle() {\r\n        if(this.x < 0 || this.x > p.width)\r\n          this.xSpeed*=-1;\r\n        if(this.y < 0 || this.y > p.height)\r\n          this.ySpeed*=-1;\r\n        this.x+=this.xSpeed;\r\n        this.y+=this.ySpeed;\r\n      }\r\n     \r\n        // this function creates the connections(lines)\r\n        // between particles which are less than a certain distance apart\r\n        joinParticles(particles) {\r\n            particles.forEach(element =>{\r\n            let dis = p.dist(this.x,this.y,element.x,element.y);\r\n            if(dis<85) {\r\n                p.stroke('rgba(255,255,255,0.5)');\r\n                p.line(this.x,this.y,element.x,element.y);\r\n            }\r\n            });\r\n        }\r\n    }\r\n\r\n    let particles = [];\r\n\r\n    p.setup = function () {\r\n        p.createCanvas(p.windowWidth, p.windowHeight);\r\n        for(let i = 0;i<p.width/10;i++){\r\n            particles.push(new Particle());\r\n          }\r\n    };\r\n      \r\n    /*\r\n\r\n    class MovingCircle {\r\n        constructor(){\r\n            this.x = p.random(p.windowWidth);\r\n            this.y = 0;\r\n            this.diameter = 10;\r\n            this.speed = -10;\r\n        }\r\n        move() {\r\n            this.x += p.random(-this.speed, this.speed);\r\n            this.y -= this.speed;\r\n        }\r\n        display() {\r\n            p.noStroke();\r\n            p.ellipse(this.x, this.y, this.diameter, this.diameter);\r\n        }\r\n    }*/\r\n\r\n    //let circles = [new MovingCircle(), new MovingCircle(), new MovingCircle()];\r\n    let clicked =false;\r\n    let dr = 8;\r\n    let r = 0;\r\n  \r\n    p.draw = function () {\r\n        p.clear();\r\n\r\n        for(let i = 0;i<particles.length;i++) {\r\n            particles[i].createParticle();\r\n            particles[i].moveParticle();\r\n            particles[i].joinParticles(particles.slice(i));\r\n          }\r\n        // for (let i = 0; i < circles.length; i++) {\r\n        //     circles[i].move();\r\n        //     circles[i].display();\r\n        // }\r\n        if (clicked && p.mouseButton === p.LEFT) {\r\n            p.noFill();\r\n            p.stroke(255);\r\n            p.strokeWeight(3);\r\n            p.ellipse(p.mouseX, p.mouseY, r, r);\r\n            r += dr;\r\n        }\r\n        else {\r\n            r = 0;\r\n        }\r\n    };\r\n\r\n    p.mousePressed = function (event) {\r\n        console.log(event);\r\n        clicked = true;\r\n        setTimeout(()=>{\r\n            clicked = false;\r\n        }, 200);\r\n    }\r\n\r\n    p.windowResized = function () {\r\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\r\n    }\r\n  };","import React from 'react'\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className = 'App-header'>\r\n            <div className = 'Navigation-bar'>\r\n                <a className = 'Navigation-item' href={\"./#\"}>\r\n                    About\r\n                </a>\r\n                <a className = 'Navigation-item' href={\"./#\"}>\r\n                    Projects\r\n                </a>\r\n                <a className = 'Navigation-item' href={\"./#\"}>\r\n                    Hobbies\r\n                </a>\r\n            </div>\r\n            <div className = 'Name'>\r\n                <h1 style ={{fontWeight: 700}}>Chee Eun Ahn</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import logo from './profiledrawing-512px.png';\r\nimport './App.css';\r\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport Sketch from './sketches/Sketch.js'\r\nimport Header from './components/Header.js'\r\n\r\n// To insert icons, please look here https://react-icons.github.io/react-icons\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"App-content\">\r\n        {/* <img className= \"App-logo\" src={logo} alt=\"Logo\" /> */}\r\n        <p>\r\n          Innovating the User Experience\r\n        </p>\r\n      </div>\r\n      <div className=\"Sketch\">\r\n        <ReactP5Wrapper sketch={Sketch} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}